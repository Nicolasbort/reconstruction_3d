<?xml version="1.0"?>
<launch> 

    <arg name="world_name" default="house"/>
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="rec3d" />
    <arg name="pause" value="false"/>

    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models:$(find rec3d)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models:$(find rec3d)/models"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find rec3d)/worlds/$(arg world_name).world"/>
        <arg name="paused" value="$(arg pause)"/>
    </include>
    
    <group ns="pelican">
        <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
            <arg name="mav_name" value="pelican" />
            <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
            <arg name="enable_logging" value="$(arg enable_logging)" />
            <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
            <arg name="log_file" value="pelican"/>
            <arg name="x" value="0.0"/>
            <arg name="y" value="-5.0"/>
        </include>
        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_pelican.yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/pelican.yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <node name="pelican_planner_node" pkg="rec3d" type="planner_pelican.py" />


</launch>